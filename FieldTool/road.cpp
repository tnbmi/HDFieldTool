//=============================================================================
//
// Roadクラス [road.cpp]
// Author : Ken Matsuura
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "road.h"

#define ROAD_SIZE	(64.0f)

//=============================================================================
// コンストラクタ
//=============================================================================
CRoad::CRoad(int priority, OBJTYPE objType) : CScene2D(priority, objType)
{
	m_next = NULL;
	m_prev = NULL;
}

//=============================================================================
// 生成
//=============================================================================
CRoad* CRoad::Create(LPDIRECT3DDEVICE9 device, ROAD_DATA data, POINT_TYPE pointType)
{
	CRoad* pointer = new CRoad;
	pointer->Init(device, (CImport::TEXTURES)(CImport::DIRT + data.type), pointType);
	// データを元に座標の変更
	pointer->SetSize(ROAD_SIZE, ROAD_SIZE);
	pointer->SetHitSize(D3DXVECTOR2(ROAD_SIZE, ROAD_SIZE));
	pointer->SetPos(data.Index.x * 64, SCREEN_HEIGHT - ((data.Index.y * 64) + 64));
	return pointer;
}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CRoad::Init(LPDIRECT3DDEVICE9 device, CImport::TEXTURES texture, POINT_TYPE pointType)
{
	HRESULT hr;

	// 継承元の初期化呼び出し
	hr = CScene2D::Init(device, texture, pointType);
	// 継承元の初期化に失敗したら
	if(hr == E_FAIL)
	{
		return E_FAIL;
	}

	return S_OK;
}

//=============================================================================
// 終了
//=============================================================================
void CRoad::Uninit(void)
{
	// 継承元の終了処理呼び出し
	CScene2D::Uninit();
}

//=============================================================================
// 更新
//=============================================================================
void CRoad::Update(void)
{
	// 継承元の更新処理呼び出し
	CScene2D::Update();
}

//=============================================================================
// 描画
//=============================================================================
void CRoad::Draw(void)
{
	// 継承元の描画処理呼び出し
	CScene2D::Draw();

	// 当たり判定ボックスの描画
	DrawHitBox();
}


// End of File